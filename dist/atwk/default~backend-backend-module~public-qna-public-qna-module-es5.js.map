{"version":3,"sources":["webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/menu.js","webpack:///node_modules/@angular/material/__ivy_ngcc__/fesm2015/toolbar.js"],"names":["_c0","_c1","_MatMenu_ng_template_0_Template","rf","ctx","_r2","_MatMenu_ng_template_0_Template_div_keydown_0_listener","$event","ctx_r1","_handleKeydown","_MatMenu_ng_template_0_Template_div_click_0_listener","ctx_r3","closed","emit","_MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener","ctx_r4","_onAnimationStart","_MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener","ctx_r5","_onAnimationDone","ctx_r0","panelId","_classList","_panelAnimationState","ariaLabel","ariaLabelledby","ariaDescribedby","matMenuAnimations","transformMenu","opacity","transform","fadeInItems","MatMenuContent","_template","_componentFactoryResolver","_appRef","_injector","_viewContainerRef","_document","_changeDetectorRef","_attached","context","_portal","detach","_outlet","createElement","element","elementRef","nativeElement","parentNode","insertBefore","outletElement","markForCheck","attach","next","isAttached","dispose","ɵfac","MatMenuContent_Factory","t","ɵdir","type","selectors","ctorParameters","undefined","decorators","args","selector","throwMatMenuMissingError","Error","throwMatMenuInvalidPositionX","throwMatMenuInvalidPositionY","MAT_MENU_PANEL","MatMenuPanel","MatMenuItemBase","_MatMenuItemMixinBase","MatMenuItem","_elementRef","document","_focusMonitor","_parentMenu","role","_hovered","_focused","_highlighted","_triggersSubmenu","monitor","addItem","origin","options","focusVia","_getHostElement","focus","stopMonitoring","removeItem","complete","disabled","event","preventDefault","stopPropagation","textNodeType","TEXT_NODE","output","childNodes","length","i","nodeType","textContent","trim","MatMenuItem_Factory","ɵcmp","hostAttrs","hostVars","hostBindings","MatMenuItem_HostBindings","MatMenuItem_click_HostBindingHandler","_checkDisabled","MatMenuItem_mouseenter_HostBindingHandler","_handleMouseEnter","_getTabIndex","toString","inputs","disableRipple","exportAs","features","attrs","ngContentSelectors","decls","vars","consts","template","MatMenuItem_Template","directives","encapsulation","changeDetection","propDecorators","host","OnPush","None","MatMenuDefaultOptions","MAT_MENU_DEFAULT_OPTIONS","providedIn","factory","MAT_MENU_DEFAULT_OPTIONS_FACTORY","overlapTrigger","xPosition","yPosition","backdropClass","MAT_MENU_BASE_ELEVATION","menuPanelUid","_MatMenuBase","_ngZone","_defaultOptions","_xPosition","_yPosition","_directDescendantItems","_tabSubscription","EMPTY","_animationDone","_overlapTrigger","_hasBackdrop","hasBackdrop","close","setPositionClasses","_updateDirectDescendants","_keyManager","withWrap","withTypeAhead","tabOut","subscribe","changes","pipe","items","map","item","focusedItem","updateActiveItem","destroy","unsubscribe","itemChanges","_item","keyCode","manager","parentMenu","direction","setFirstItemActive","setLastItemActive","setFocusOrigin","onKeydown","lazyContent","onStable","asObservable","_focusFirstItem","activeItem","first","parentElement","getAttribute","setActiveItem","depth","elevation","Math","min","newElevation","customElevation","Object","keys","find","c","startsWith","_previousElevation","posX","posY","classes","_isAnimating","toState","activeItemIndex","scrollTop","_allItems","reset","filter","notifyOnChanges","value","previousPanelClass","_previousPanelClass","split","forEach","className","panelClass","_MatMenuBase_Factory","contentQueries","_MatMenuBase_ContentQueries","dirIndex","_t","viewQuery","_MatMenuBase_Query","templateRef","classList","outputs","descendants","MatMenu","MatMenu_Factory","ɵMatMenu_BaseFactory","_MatMenu","ngZone","defaultOptions","_MatMenu_Factory","provide","useExisting","_MatMenu_Template","styles","data","animation","animations","providers","MAT_MENU_SCROLL_STRATEGY","MAT_MENU_SCROLL_STRATEGY_FACTORY","overlay","scrollStrategies","reposition","MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER","deps","useFactory","MENU_PANEL_TOP_PADDING","passiveEventListenerOptions","passive","MatMenuTrigger","_overlay","_element","scrollStrategy","_menuItemInstance","_dir","_overlayRef","_menuOpen","_closingActionsSubscription","_hoverSubscription","_menuCloseSubscription","_handleTouchStart","_openedBy","restoreFocus","menuOpened","onMenuOpen","menuClosed","onMenuClose","addEventListener","triggersSubmenu","_scrollStrategy","_checkMenu","_handleHover","removeEventListener","closeMenu","openMenu","overlayRef","_createOverlay","overlayConfig","getConfig","_setPosition","positionStrategy","menu","_getPortal","menuData","_menuClosingActions","_initMenu","_startAnimation","menuOpen","_restoreFocus","_resetAnimation","_setIsMenuOpen","dir","_setMenuElevation","focusFirstItem","setElevation","isOpen","config","_getOverlayConfig","_subscribeToPositions","create","keydownEvents","position","flexibleConnectedTo","withLockedPosition","withTransformOriginOn","positionChanges","change","connectionPair","overlayX","overlayY","originX","originFallbackX","overlayFallbackY","originY","originFallbackY","overlayFallbackX","offsetY","withPositions","backdrop","backdropClick","detachments","parentClose","hover","active","button","toggleMenu","v","_menu","reason","_destroyMenu","MatMenuTrigger_Factory","MatMenuTrigger_HostBindings","MatMenuTrigger_mousedown_HostBindingHandler","_handleMousedown","MatMenuTrigger_keydown_HostBindingHandler","MatMenuTrigger_click_HostBindingHandler","_handleClick","_deprecatedMatMenuTriggerFor","_MatMenuDirectivesModule","ɵmod","ɵinj","_MatMenuDirectivesModule_Factory","imports","ngJitMode","declarations","exports","MatMenuModule","MatMenuModule_Factory","MatToolbarBase","_MatToolbarMixinBase","MatToolbarRow","MatToolbarRow_Factory","MatToolbar","_platform","isBrowser","_checkToolbarMixedModes","_toolbarRows","isCombinedUsage","Array","from","node","contains","COMMENT_NODE","some","throwToolbarMixedModesError","MatToolbar_Factory","MatToolbar_ContentQueries","MatToolbar_HostBindings","color","MatToolbar_Template","MatToolbarModule","MatToolbarModule_Factory"],"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","file":"default~backend-backend-module~public-qna-public-qna-module-es5.js","sourcesContent":["import { FocusMonitor, FocusKeyManager, isFakeMousedownFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { UP_ARROW, DOWN_ARROW, END, hasModifierKey, HOME, RIGHT_ARROW, LEFT_ARROW, ESCAPE } from '@angular/cdk/keycodes';\nimport { Directive, TemplateRef, ComponentFactoryResolver, ApplicationRef, Injector, ViewContainerRef, Inject, ChangeDetectorRef, InjectionToken, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Optional, Input, HostListener, QueryList, EventEmitter, NgZone, ContentChildren, ViewChild, ContentChild, Output, Self, NgModule } from '@angular/core';\nimport { Subject, Subscription, merge, of, asapScheduler } from 'rxjs';\nimport { startWith, switchMap, take, filter, takeUntil, delay } from 'rxjs/operators';\nimport { trigger, state, style, transition, group, query, animate } from '@angular/animations';\nimport { TemplatePortal, DomPortalOutlet } from '@angular/cdk/portal';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport { mixinDisableRipple, mixinDisabled, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { Overlay, OverlayConfig, OverlayModule } from '@angular/cdk/overlay';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-animations.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Animations used by the mat-menu component.\n * Animation duration and timing values are based on:\n * https://material.io/guidelines/components/menus.html#menus-usage\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/a11y';\nimport * as ɵngcc2 from '@angular/material/core';\nimport * as ɵngcc3 from '@angular/common';\nimport * as ɵngcc4 from '@angular/cdk/overlay';\nimport * as ɵngcc5 from '@angular/cdk/bidi';\n\nconst _c0 = [\"mat-menu-item\", \"\"];\nconst _c1 = [\"*\"];\nfunction _MatMenu_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n    ɵngcc0.ɵɵlistener(\"keydown\", function _MatMenu_ng_template_0_Template_div_keydown_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1._handleKeydown($event); })(\"click\", function _MatMenu_ng_template_0_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r3 = ɵngcc0.ɵɵnextContext(); return ctx_r3.closed.emit(\"click\"); })(\"@transformMenu.start\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_start_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r4 = ɵngcc0.ɵɵnextContext(); return ctx_r4._onAnimationStart($event); })(\"@transformMenu.done\", function _MatMenu_ng_template_0_Template_div_animation_transformMenu_done_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r5 = ɵngcc0.ɵɵnextContext(); return ctx_r5._onAnimationDone($event); });\n    ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n    ɵngcc0.ɵɵprojection(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r0.panelId)(\"ngClass\", ctx_r0._classList)(\"@transformMenu\", ctx_r0._panelAnimationState);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.ariaLabel || null)(\"aria-labelledby\", ctx_r0.ariaLabelledby || null)(\"aria-describedby\", ctx_r0.ariaDescribedby || null);\n} }\nconst matMenuAnimations = {\n    /**\n     * This animation controls the menu panel's entry and exit from the page.\n     *\n     * When the menu panel is added to the DOM, it scales in and fades in its border.\n     *\n     * When the menu panel is removed from the DOM, it simply fades out after a brief\n     * delay to display the ripple.\n     */\n    transformMenu: trigger('transformMenu', [\n        state('void', style({\n            opacity: 0,\n            transform: 'scale(0.8)'\n        })),\n        transition('void => enter', group([\n            query('.mat-menu-content, .mat-mdc-menu-content', animate('100ms linear', style({\n                opacity: 1\n            }))),\n            animate('120ms cubic-bezier(0, 0, 0.2, 1)', style({ transform: 'scale(1)' })),\n        ])),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 })))\n    ]),\n    /**\n     * This animation fades in the background color and content of the menu panel\n     * after its containing element is scaled in.\n     */\n    fadeInItems: trigger('fadeInItems', [\n        // TODO(crisbeto): this is inside the `transformMenu`\n        // now. Remove next time we do breaking changes.\n        state('showing', style({ opacity: 1 })),\n        transition('void => *', [\n            style({ opacity: 0 }),\n            animate('400ms 100ms cubic-bezier(0.55, 0, 0.55, 0.2)')\n        ])\n    ])\n};\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst fadeInItems = matMenuAnimations.fadeInItems;\n/**\n * @deprecated\n * \\@breaking-change 8.0.0\n * \\@docs-private\n * @type {?}\n */\nconst transformMenu = matMenuAnimations.transformMenu;\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-content.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Menu content that will be rendered lazily once the menu is opened.\n */\nclass MatMenuContent {\n    /**\n     * @param {?} _template\n     * @param {?} _componentFactoryResolver\n     * @param {?} _appRef\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _document\n     * @param {?=} _changeDetectorRef\n     */\n    constructor(_template, _componentFactoryResolver, _appRef, _injector, _viewContainerRef, _document, _changeDetectorRef) {\n        this._template = _template;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._appRef = _appRef;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._document = _document;\n        this._changeDetectorRef = _changeDetectorRef;\n        /**\n         * Emits when the menu content has been attached.\n         */\n        this._attached = new Subject();\n    }\n    /**\n     * Attaches the content with a particular context.\n     * \\@docs-private\n     * @param {?=} context\n     * @return {?}\n     */\n    attach(context = {}) {\n        if (!this._portal) {\n            this._portal = new TemplatePortal(this._template, this._viewContainerRef);\n        }\n        this.detach();\n        if (!this._outlet) {\n            this._outlet = new DomPortalOutlet(this._document.createElement('div'), this._componentFactoryResolver, this._appRef, this._injector);\n        }\n        /** @type {?} */\n        const element = this._template.elementRef.nativeElement;\n        // Because we support opening the same menu from different triggers (which in turn have their\n        // own `OverlayRef` panel), we have to re-insert the host element every time, otherwise we\n        // risk it staying attached to a pane that's no longer in the DOM.\n        (/** @type {?} */ (element.parentNode)).insertBefore(this._outlet.outletElement, element);\n        // When `MatMenuContent` is used in an `OnPush` component, the insertion of the menu\n        // content via `createEmbeddedView` does not cause the content to be seen as \"dirty\"\n        // by Angular. This causes the `@ContentChildren` for menu items within the menu to\n        // not be updated by Angular. By explicitly marking for check here, we tell Angular that\n        // it needs to check for new menu items and update the `@ContentChild` in `MatMenu`.\n        // @breaking-change 9.0.0 Make change detector ref required\n        if (this._changeDetectorRef) {\n            this._changeDetectorRef.markForCheck();\n        }\n        this._portal.attach(this._outlet, context);\n        this._attached.next();\n    }\n    /**\n     * Detaches the content.\n     * \\@docs-private\n     * @return {?}\n     */\n    detach() {\n        if (this._portal.isAttached) {\n            this._portal.detach();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._outlet) {\n            this._outlet.dispose();\n        }\n    }\n}\nMatMenuContent.ɵfac = function MatMenuContent_Factory(t) { return new (t || MatMenuContent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ApplicationRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef)); };\nMatMenuContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuContent, selectors: [[\"ng-template\", \"matMenuContent\", \"\"]] });\n/** @nocollapse */\nMatMenuContent.ctorParameters = () => [\n    { type: TemplateRef },\n    { type: ComponentFactoryResolver },\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuContent, [{\n        type: Directive,\n        args: [{\n                selector: 'ng-template[matMenuContent]'\n            }]\n    }], function () { return [{ type: ɵngcc0.TemplateRef }, { type: ɵngcc0.ComponentFactoryResolver }, { type: ɵngcc0.ApplicationRef }, { type: ɵngcc0.Injector }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc0.ChangeDetectorRef }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._outlet;\n    /**\n     * Emits when the menu content has been attached.\n     * @type {?}\n     */\n    MatMenuContent.prototype._attached;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._template;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._componentFactoryResolver;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._appRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._injector;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._document;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuContent.prototype._changeDetectorRef;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-errors.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Throws an exception for the case when menu trigger doesn't have a valid mat-menu instance\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuMissingError() {\n    throw Error(`matMenuTriggerFor: must pass in an mat-menu instance.\n\n    Example:\n      <mat-menu #menu=\"matMenu\"></mat-menu>\n      <button [matMenuTriggerFor]=\"menu\"></button>`);\n}\n/**\n * Throws an exception for the case when menu's x-position value isn't valid.\n * In other words, it doesn't match 'before' or 'after'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionX() {\n    throw Error(`xPosition value must be either 'before' or after'.\n      Example: <mat-menu xPosition=\"before\" #menu=\"matMenu\"></mat-menu>`);\n}\n/**\n * Throws an exception for the case when menu's y-position value isn't valid.\n * In other words, it doesn't match 'above' or 'below'.\n * \\@docs-private\n * @return {?}\n */\nfunction throwMatMenuInvalidPositionY() {\n    throw Error(`yPosition value must be either 'above' or below'.\n      Example: <mat-menu yPosition=\"above\" #menu=\"matMenu\"></mat-menu>`);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-panel.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to provide the parent menu to menu-specific components.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_PANEL = new InjectionToken('MAT_MENU_PANEL');\n/**\n * Interface for a custom menu panel that can be used with `matMenuTriggerFor`.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction MatMenuPanel() { }\nif (false) {\n    /** @type {?} */\n    MatMenuPanel.prototype.xPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.yPosition;\n    /** @type {?} */\n    MatMenuPanel.prototype.overlapTrigger;\n    /** @type {?} */\n    MatMenuPanel.prototype.templateRef;\n    /** @type {?} */\n    MatMenuPanel.prototype.close;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.parentMenu;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.direction;\n    /** @type {?} */\n    MatMenuPanel.prototype.focusFirstItem;\n    /** @type {?} */\n    MatMenuPanel.prototype.resetActiveItem;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.setPositionClasses;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.lazyContent;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.backdropClass;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.hasBackdrop;\n    /** @type {?|undefined} */\n    MatMenuPanel.prototype.panelId;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.addItem;\n    /**\n     * @deprecated To be removed.\n     * \\@breaking-change 8.0.0\n     * @type {?|undefined}\n     */\n    MatMenuPanel.prototype.removeItem;\n    /**\n     * @param {?} depth\n     * @return {?}\n     */\n    MatMenuPanel.prototype.setElevation = function (depth) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-item.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatMenuItem.\n/**\n * \\@docs-private\n */\nclass MatMenuItemBase {\n}\n/** @type {?} */\nconst _MatMenuItemMixinBase = mixinDisableRipple(mixinDisabled(MatMenuItemBase));\n/**\n * Single item inside of a `mat-menu`. Provides the menu item styling and accessibility treatment.\n */\nclass MatMenuItem extends _MatMenuItemMixinBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?=} document\n     * @param {?=} _focusMonitor\n     * @param {?=} _parentMenu\n     */\n    constructor(_elementRef, document, _focusMonitor, _parentMenu) {\n        // @breaking-change 8.0.0 make `_focusMonitor` and `document` required params.\n        super();\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._parentMenu = _parentMenu;\n        /**\n         * ARIA role for the menu item.\n         */\n        this.role = 'menuitem';\n        /**\n         * Stream that emits when the menu item is hovered.\n         */\n        this._hovered = new Subject();\n        /**\n         * Stream that emits when the menu item is focused.\n         */\n        this._focused = new Subject();\n        /**\n         * Whether the menu item is highlighted.\n         */\n        this._highlighted = false;\n        /**\n         * Whether the menu item acts as a trigger for a sub-menu.\n         */\n        this._triggersSubmenu = false;\n        if (_focusMonitor) {\n            // Start monitoring the element so it gets the appropriate focused classes. We want\n            // to show the focus style for menu items only when the focus was not caused by a\n            // mouse or touch interaction.\n            _focusMonitor.monitor(this._elementRef, false);\n        }\n        if (_parentMenu && _parentMenu.addItem) {\n            _parentMenu.addItem(this);\n        }\n        this._document = document;\n    }\n    /**\n     * Focuses the menu item.\n     * @param {?=} origin\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n        this._focused.next(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._focusMonitor) {\n            this._focusMonitor.stopMonitoring(this._elementRef);\n        }\n        if (this._parentMenu && this._parentMenu.removeItem) {\n            this._parentMenu.removeItem(this);\n        }\n        this._hovered.complete();\n        this._focused.complete();\n    }\n    /**\n     * Used to set the `tabindex`.\n     * @return {?}\n     */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /**\n     * Returns the host DOM element.\n     * @return {?}\n     */\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    /**\n     * Prevents the default element actions if it is disabled.\n     * @param {?} event\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _checkDisabled(event) {\n        if (this.disabled) {\n            event.preventDefault();\n            event.stopPropagation();\n        }\n    }\n    /**\n     * Emits to the hover stream.\n     * @return {?}\n     */\n    // We have to use a `HostListener` here in order to support both Ivy and ViewEngine.\n    // In Ivy the `host` bindings will be merged when this class is extended, whereas in\n    // ViewEngine they're overwritten.\n    // TODO(crisbeto): we move this back into `host` once Ivy is turned on by default.\n    // tslint:disable-next-line:no-host-decorator-in-concrete\n    _handleMouseEnter() {\n        this._hovered.next(this);\n    }\n    /**\n     * Gets the label to be used when determining whether the option should be focused.\n     * @return {?}\n     */\n    getLabel() {\n        /** @type {?} */\n        const element = this._elementRef.nativeElement;\n        /** @type {?} */\n        const textNodeType = this._document ? this._document.TEXT_NODE : 3;\n        /** @type {?} */\n        let output = '';\n        if (element.childNodes) {\n            /** @type {?} */\n            const length = element.childNodes.length;\n            // Go through all the top-level text nodes and extract their text.\n            // We skip anything that's not a text node to prevent the text from\n            // being thrown off by something like an icon.\n            for (let i = 0; i < length; i++) {\n                if (element.childNodes[i].nodeType === textNodeType) {\n                    output += element.childNodes[i].textContent;\n                }\n            }\n        }\n        return output.trim();\n    }\n}\nMatMenuItem.ɵfac = function MatMenuItem_Factory(t) { return new (t || MatMenuItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_PANEL, 8)); };\nMatMenuItem.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatMenuItem, selectors: [[\"\", \"mat-menu-item\", \"\"]], hostAttrs: [1, \"mat-focus-indicator\"], hostVars: 10, hostBindings: function MatMenuItem_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function MatMenuItem_click_HostBindingHandler($event) { return ctx._checkDisabled($event); })(\"mouseenter\", function MatMenuItem_mouseenter_HostBindingHandler() { return ctx._handleMouseEnter(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx._getTabIndex())(\"aria-disabled\", ctx.disabled.toString())(\"disabled\", ctx.disabled || null);\n        ɵngcc0.ɵɵclassProp(\"mat-menu-item\", true)(\"mat-menu-item-highlighted\", ctx._highlighted)(\"mat-menu-item-submenu-trigger\", ctx._triggersSubmenu);\n    } }, inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", role: \"role\" }, exportAs: [\"matMenuItem\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 2, consts: [[\"matRipple\", \"\", 1, \"mat-menu-ripple\", 3, \"matRippleDisabled\", \"matRippleTrigger\"]], template: function MatMenuItem_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵelement(1, \"div\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleTrigger\", ctx._getHostElement());\n    } }, directives: [ɵngcc2.MatRipple], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatMenuItem.ctorParameters = () => [\n    { type: ElementRef },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: FocusMonitor },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_PANEL,] }, { type: Optional }] }\n];\nMatMenuItem.propDecorators = {\n    role: [{ type: Input }],\n    _checkDisabled: [{ type: HostListener, args: ['click', ['$event'],] }],\n    _handleMouseEnter: [{ type: HostListener, args: ['mouseenter',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuItem, [{\n        type: Component,\n        args: [{\n                selector: '[mat-menu-item]',\n                exportAs: 'matMenuItem',\n                inputs: ['disabled', 'disableRipple'],\n                host: {\n                    '[attr.role]': 'role',\n                    '[class.mat-menu-item]': 'true',\n                    '[class.mat-menu-item-highlighted]': '_highlighted',\n                    '[class.mat-menu-item-submenu-trigger]': '_triggersSubmenu',\n                    '[attr.tabindex]': '_getTabIndex()',\n                    '[attr.aria-disabled]': 'disabled.toString()',\n                    '[attr.disabled]': 'disabled || null',\n                    'class': 'mat-focus-indicator'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: \"<ng-content></ng-content>\\n<div class=\\\"mat-menu-ripple\\\" matRipple\\n     [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n     [matRippleTrigger]=\\\"_getHostElement()\\\">\\n</div>\\n\"\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ɵngcc1.FocusMonitor }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_PANEL]\n            }, {\n                type: Optional\n            }] }]; }, { role: [{\n            type: Input\n        }], _checkDisabled: [{\n            type: HostListener,\n            args: ['click', ['$event']]\n        }], _handleMouseEnter: [{\n            type: HostListener,\n            args: ['mouseenter']\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disabled;\n    /** @type {?} */\n    MatMenuItem.ngAcceptInputType_disableRipple;\n    /**\n     * ARIA role for the menu item.\n     * @type {?}\n     */\n    MatMenuItem.prototype.role;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._document;\n    /**\n     * Stream that emits when the menu item is hovered.\n     * @type {?}\n     */\n    MatMenuItem.prototype._hovered;\n    /**\n     * Stream that emits when the menu item is focused.\n     * @type {?}\n     */\n    MatMenuItem.prototype._focused;\n    /**\n     * Whether the menu item is highlighted.\n     * @type {?}\n     */\n    MatMenuItem.prototype._highlighted;\n    /**\n     * Whether the menu item acts as a trigger for a sub-menu.\n     * @type {?}\n     */\n    MatMenuItem.prototype._triggersSubmenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuItem.prototype._focusMonitor;\n    /** @type {?} */\n    MatMenuItem.prototype._parentMenu;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Default `mat-menu` options that can be overridden.\n * @record\n */\nfunction MatMenuDefaultOptions() { }\nif (false) {\n    /**\n     * The x-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.xPosition;\n    /**\n     * The y-axis position of the menu.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.yPosition;\n    /**\n     * Whether the menu should overlap the menu trigger.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.overlapTrigger;\n    /**\n     * Class to be applied to the menu's backdrop.\n     * @type {?}\n     */\n    MatMenuDefaultOptions.prototype.backdropClass;\n    /**\n     * Whether the menu has a backdrop.\n     * @type {?|undefined}\n     */\n    MatMenuDefaultOptions.prototype.hasBackdrop;\n}\n/**\n * Injection token to be used to override the default options for `mat-menu`.\n * @type {?}\n */\nconst MAT_MENU_DEFAULT_OPTIONS = new InjectionToken('mat-menu-default-options', {\n    providedIn: 'root',\n    factory: MAT_MENU_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction MAT_MENU_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        overlapTrigger: false,\n        xPosition: 'after',\n        yPosition: 'below',\n        backdropClass: 'cdk-overlay-transparent-backdrop',\n    };\n}\n/**\n * Start elevation for the menu panel.\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_BASE_ELEVATION = 4;\n/** @type {?} */\nlet menuPanelUid = 0;\n/**\n * Base class with all of the `MatMenu` functionality.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuBase {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _ngZone\n     * @param {?} _defaultOptions\n     */\n    constructor(_elementRef, _ngZone, _defaultOptions) {\n        this._elementRef = _elementRef;\n        this._ngZone = _ngZone;\n        this._defaultOptions = _defaultOptions;\n        this._xPosition = this._defaultOptions.xPosition;\n        this._yPosition = this._defaultOptions.yPosition;\n        /**\n         * Only the direct descendant menu items.\n         */\n        this._directDescendantItems = new QueryList();\n        /**\n         * Subscription to tab events on the menu panel\n         */\n        this._tabSubscription = Subscription.EMPTY;\n        /**\n         * Config object to be passed into the menu's ngClass\n         */\n        this._classList = {};\n        /**\n         * Current state of the panel animation.\n         */\n        this._panelAnimationState = 'void';\n        /**\n         * Emits whenever an animation on the menu completes.\n         */\n        this._animationDone = new Subject();\n        /**\n         * Class to be added to the backdrop element.\n         */\n        this.backdropClass = this._defaultOptions.backdropClass;\n        this._overlapTrigger = this._defaultOptions.overlapTrigger;\n        this._hasBackdrop = this._defaultOptions.hasBackdrop;\n        /**\n         * Event emitted when the menu is closed.\n         */\n        this.closed = new EventEmitter();\n        /**\n         * Event emitted when the menu is closed.\n         * @deprecated Switch to `closed` instead\n         * \\@breaking-change 8.0.0\n         */\n        this.close = this.closed;\n        this.panelId = `mat-menu-panel-${menuPanelUid++}`;\n    }\n    /**\n     * Position of the menu in the X axis.\n     * @return {?}\n     */\n    get xPosition() { return this._xPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set xPosition(value) {\n        if (value !== 'before' && value !== 'after') {\n            throwMatMenuInvalidPositionX();\n        }\n        this._xPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Position of the menu in the Y axis.\n     * @return {?}\n     */\n    get yPosition() { return this._yPosition; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set yPosition(value) {\n        if (value !== 'above' && value !== 'below') {\n            throwMatMenuInvalidPositionY();\n        }\n        this._yPosition = value;\n        this.setPositionClasses();\n    }\n    /**\n     * Whether the menu should overlap its trigger.\n     * @return {?}\n     */\n    get overlapTrigger() { return this._overlapTrigger; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set overlapTrigger(value) {\n        this._overlapTrigger = coerceBooleanProperty(value);\n    }\n    /**\n     * Whether the menu has a backdrop.\n     * @return {?}\n     */\n    get hasBackdrop() { return this._hasBackdrop; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set hasBackdrop(value) {\n        this._hasBackdrop = coerceBooleanProperty(value);\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @param {?} classes list of class names\n     * @return {?}\n     */\n    set panelClass(classes) {\n        /** @type {?} */\n        const previousPanelClass = this._previousPanelClass;\n        if (previousPanelClass && previousPanelClass.length) {\n            previousPanelClass.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = false;\n            }));\n        }\n        this._previousPanelClass = classes;\n        if (classes && classes.length) {\n            classes.split(' ').forEach((/**\n             * @param {?} className\n             * @return {?}\n             */\n            (className) => {\n                this._classList[className] = true;\n            }));\n            this._elementRef.nativeElement.className = '';\n        }\n    }\n    /**\n     * This method takes classes set on the host mat-menu element and applies them on the\n     * menu template that displays in the overlay container.  Otherwise, it's difficult\n     * to style the containing menu from outside the component.\n     * @deprecated Use `panelClass` instead.\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get classList() { return this.panelClass; }\n    /**\n     * @param {?} classes\n     * @return {?}\n     */\n    set classList(classes) { this.panelClass = classes; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.setPositionClasses();\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._updateDirectDescendants();\n        this._keyManager = new FocusKeyManager(this._directDescendantItems).withWrap().withTypeAhead();\n        this._tabSubscription = this._keyManager.tabOut.subscribe((/**\n         * @return {?}\n         */\n        () => this.closed.emit('tab')));\n        // If a user manually (programatically) focuses a menu item, we need to reflect that focus\n        // change back to the key manager. Note that we don't need to unsubscribe here because _focused\n        // is internal and we know that it gets completed on destroy.\n        this._directDescendantItems.changes.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._focused)))))).subscribe((/**\n         * @param {?} focusedItem\n         * @return {?}\n         */\n        focusedItem => this._keyManager.updateActiveItem(focusedItem)));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._directDescendantItems.destroy();\n        this._tabSubscription.unsubscribe();\n        this.closed.complete();\n    }\n    /**\n     * Stream that emits whenever the hovered menu item changes.\n     * @return {?}\n     */\n    _hovered() {\n        // Coerce the `changes` property because Angular types it as `Observable<any>`\n        /** @type {?} */\n        const itemChanges = (/** @type {?} */ (this._directDescendantItems.changes));\n        return (/** @type {?} */ (itemChanges.pipe(startWith(this._directDescendantItems), switchMap((/**\n         * @param {?} items\n         * @return {?}\n         */\n        items => merge(...items.map((/**\n         * @param {?} item\n         * @return {?}\n         */\n        (item) => item._hovered))))))));\n    }\n    /*\n       * Registers a menu item with the menu.\n       * @docs-private\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 9.0.0\n       */\n    /**\n     * @param {?} _item\n     * @return {?}\n     */\n    addItem(_item) { }\n    /**\n     * Removes an item from the menu.\n     * \\@docs-private\n     * @deprecated No longer being used. To be removed.\n     * \\@breaking-change 9.0.0\n     * @param {?} _item\n     * @return {?}\n     */\n    removeItem(_item) { }\n    /**\n     * Handle a keyboard event from the menu, delegating to the appropriate action.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        /** @type {?} */\n        const manager = this._keyManager;\n        switch (keyCode) {\n            case ESCAPE:\n                if (!hasModifierKey(event)) {\n                    event.preventDefault();\n                    this.closed.emit('keydown');\n                }\n                break;\n            case LEFT_ARROW:\n                if (this.parentMenu && this.direction === 'ltr') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case RIGHT_ARROW:\n                if (this.parentMenu && this.direction === 'rtl') {\n                    this.closed.emit('keydown');\n                }\n                break;\n            case HOME:\n            case END:\n                if (!hasModifierKey(event)) {\n                    keyCode === HOME ? manager.setFirstItemActive() : manager.setLastItemActive();\n                    event.preventDefault();\n                }\n                break;\n            default:\n                if (keyCode === UP_ARROW || keyCode === DOWN_ARROW) {\n                    manager.setFocusOrigin('keyboard');\n                }\n                manager.onKeydown(event);\n        }\n    }\n    /**\n     * Focus the first item in the menu.\n     * @param {?=} origin Action from which the focus originated. Used to set the correct styling.\n     * @return {?}\n     */\n    focusFirstItem(origin = 'program') {\n        // When the content is rendered lazily, it takes a bit before the items are inside the DOM.\n        if (this.lazyContent) {\n            this._ngZone.onStable.asObservable()\n                .pipe(take(1))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._focusFirstItem(origin)));\n        }\n        else {\n            this._focusFirstItem(origin);\n        }\n    }\n    /**\n     * Actual implementation that focuses the first item. Needs to be separated\n     * out so we don't repeat the same logic in the public `focusFirstItem` method.\n     * @private\n     * @param {?} origin\n     * @return {?}\n     */\n    _focusFirstItem(origin) {\n        /** @type {?} */\n        const manager = this._keyManager;\n        manager.setFocusOrigin(origin).setFirstItemActive();\n        // If there's no active item at this point, it means that all the items are disabled.\n        // Move focus to the menu panel so keyboard events like Escape still work. Also this will\n        // give _some_ feedback to screen readers.\n        if (!manager.activeItem && this._directDescendantItems.length) {\n            /** @type {?} */\n            let element = this._directDescendantItems.first._getHostElement().parentElement;\n            // Because the `mat-menu` is at the DOM insertion point, not inside the overlay, we don't\n            // have a nice way of getting a hold of the menu panel. We can't use a `ViewChild` either\n            // because the panel is inside an `ng-template`. We work around it by starting from one of\n            // the items and walking up the DOM.\n            while (element) {\n                if (element.getAttribute('role') === 'menu') {\n                    element.focus();\n                    break;\n                }\n                else {\n                    element = element.parentElement;\n                }\n            }\n        }\n    }\n    /**\n     * Resets the active item in the menu. This is used when the menu is opened, allowing\n     * the user to start from the first option when pressing the down arrow.\n     * @return {?}\n     */\n    resetActiveItem() {\n        this._keyManager.setActiveItem(-1);\n    }\n    /**\n     * Sets the menu panel elevation.\n     * @param {?} depth Number of parent menus that come before the menu.\n     * @return {?}\n     */\n    setElevation(depth) {\n        // The elevation starts at the base and increases by one for each level.\n        // Capped at 24 because that's the maximum elevation defined in the Material design spec.\n        /** @type {?} */\n        const elevation = Math.min(MAT_MENU_BASE_ELEVATION + depth, 24);\n        /** @type {?} */\n        const newElevation = `mat-elevation-z${elevation}`;\n        /** @type {?} */\n        const customElevation = Object.keys(this._classList).find((/**\n         * @param {?} c\n         * @return {?}\n         */\n        c => c.startsWith('mat-elevation-z')));\n        if (!customElevation || customElevation === this._previousElevation) {\n            if (this._previousElevation) {\n                this._classList[this._previousElevation] = false;\n            }\n            this._classList[newElevation] = true;\n            this._previousElevation = newElevation;\n        }\n    }\n    /**\n     * Adds classes to the menu panel based on its position. Can be used by\n     * consumers to add specific styling based on the position.\n     * \\@docs-private\n     * @param {?=} posX Position of the menu along the x axis.\n     * @param {?=} posY Position of the menu along the y axis.\n     * @return {?}\n     */\n    setPositionClasses(posX = this.xPosition, posY = this.yPosition) {\n        /** @type {?} */\n        const classes = this._classList;\n        classes['mat-menu-before'] = posX === 'before';\n        classes['mat-menu-after'] = posX === 'after';\n        classes['mat-menu-above'] = posY === 'above';\n        classes['mat-menu-below'] = posY === 'below';\n    }\n    /**\n     * Starts the enter animation.\n     * @return {?}\n     */\n    _startAnimation() {\n        // @breaking-change 8.0.0 Combine with _resetAnimation.\n        this._panelAnimationState = 'enter';\n    }\n    /**\n     * Resets the panel animation to its initial state.\n     * @return {?}\n     */\n    _resetAnimation() {\n        // @breaking-change 8.0.0 Combine with _startAnimation.\n        this._panelAnimationState = 'void';\n    }\n    /**\n     * Callback that is invoked when the panel animation completes.\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationDone(event) {\n        this._animationDone.next(event);\n        this._isAnimating = false;\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _onAnimationStart(event) {\n        this._isAnimating = true;\n        // Scroll the content element to the top as soon as the animation starts. This is necessary,\n        // because we move focus to the first item while it's still being animated, which can throw\n        // the browser off when it determines the scroll position. Alternatively we can move focus\n        // when the animation is done, however moving focus asynchronously will interrupt screen\n        // readers which are in the process of reading out the menu already. We take the `element`\n        // from the `event` since we can't use a `ViewChild` to access the pane.\n        if (event.toState === 'enter' && this._keyManager.activeItemIndex === 0) {\n            event.element.scrollTop = 0;\n        }\n    }\n    /**\n     * Sets up a stream that will keep track of any newly-added menu items and will update the list\n     * of direct descendants. We collect the descendants this way, because `_allItems` can include\n     * items that are part of child menus, and using a custom way of registering items is unreliable\n     * when it comes to maintaining the item order.\n     * @private\n     * @return {?}\n     */\n    _updateDirectDescendants() {\n        this._allItems.changes\n            .pipe(startWith(this._allItems))\n            .subscribe((/**\n         * @param {?} items\n         * @return {?}\n         */\n        (items) => {\n            this._directDescendantItems.reset(items.filter((/**\n             * @param {?} item\n             * @return {?}\n             */\n            item => item._parentMenu === this)));\n            this._directDescendantItems.notifyOnChanges();\n        }));\n    }\n}\n_MatMenuBase.ɵfac = function _MatMenuBase_Factory(t) { return new (t || _MatMenuBase)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenuBase.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: _MatMenuBase, contentQueries: function _MatMenuBase_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuContent, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatMenuItem, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.lazyContent = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._allItems = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.items = _t);\n    } }, viewQuery: function _MatMenuBase_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.templateRef = _t.first);\n    } }, inputs: { backdropClass: \"backdropClass\", xPosition: \"xPosition\", yPosition: \"yPosition\", overlapTrigger: \"overlapTrigger\", hasBackdrop: \"hasBackdrop\", panelClass: [\"class\", \"panelClass\"], classList: \"classList\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"] }, outputs: { closed: \"closed\", close: \"close\" } });\n/** @nocollapse */\n_MatMenuBase.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n_MatMenuBase.propDecorators = {\n    _allItems: [{ type: ContentChildren, args: [MatMenuItem, { descendants: true },] }],\n    backdropClass: [{ type: Input }],\n    ariaLabel: [{ type: Input, args: ['aria-label',] }],\n    ariaLabelledby: [{ type: Input, args: ['aria-labelledby',] }],\n    ariaDescribedby: [{ type: Input, args: ['aria-describedby',] }],\n    xPosition: [{ type: Input }],\n    yPosition: [{ type: Input }],\n    templateRef: [{ type: ViewChild, args: [TemplateRef,] }],\n    items: [{ type: ContentChildren, args: [MatMenuItem, { descendants: false },] }],\n    lazyContent: [{ type: ContentChild, args: [MatMenuContent,] }],\n    overlapTrigger: [{ type: Input }],\n    hasBackdrop: [{ type: Input }],\n    panelClass: [{ type: Input, args: ['class',] }],\n    classList: [{ type: Input }],\n    closed: [{ type: Output }],\n    close: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuBase, [{\n        type: Directive\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, { backdropClass: [{\n            type: Input\n        }], closed: [{\n            type: Output\n        }], close: [{\n            type: Output\n        }], xPosition: [{\n            type: Input\n        }], yPosition: [{\n            type: Input\n        }], overlapTrigger: [{\n            type: Input\n        }], hasBackdrop: [{\n            type: Input\n        }], panelClass: [{\n            type: Input,\n            args: ['class']\n        }], classList: [{\n            type: Input\n        }], _allItems: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: true }]\n        }], ariaLabel: [{\n            type: Input,\n            args: ['aria-label']\n        }], ariaLabelledby: [{\n            type: Input,\n            args: ['aria-labelledby']\n        }], ariaDescribedby: [{\n            type: Input,\n            args: ['aria-describedby']\n        }], templateRef: [{\n            type: ViewChild,\n            args: [TemplateRef]\n        }], items: [{\n            type: ContentChildren,\n            args: [MatMenuItem, { descendants: false }]\n        }], lazyContent: [{\n            type: ContentChild,\n            args: [MatMenuContent]\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_overlapTrigger;\n    /** @type {?} */\n    _MatMenuBase.ngAcceptInputType_hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._keyManager;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._xPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._yPosition;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousElevation;\n    /**\n     * All items inside the menu. Includes items nested inside another menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._allItems;\n    /**\n     * Only the direct descendant menu items.\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._directDescendantItems;\n    /**\n     * Subscription to tab events on the menu panel\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._tabSubscription;\n    /**\n     * Config object to be passed into the menu's ngClass\n     * @type {?}\n     */\n    _MatMenuBase.prototype._classList;\n    /**\n     * Current state of the panel animation.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._panelAnimationState;\n    /**\n     * Emits whenever an animation on the menu completes.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._animationDone;\n    /**\n     * Whether the menu is animating.\n     * @type {?}\n     */\n    _MatMenuBase.prototype._isAnimating;\n    /**\n     * Parent menu of the current menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.parentMenu;\n    /**\n     * Layout direction of the menu.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.direction;\n    /**\n     * Class to be added to the backdrop element.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.backdropClass;\n    /**\n     * aria-label for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabel;\n    /**\n     * aria-labelledby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaLabelledby;\n    /**\n     * aria-describedby for the menu panel.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.ariaDescribedby;\n    /**\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.templateRef;\n    /**\n     * List of the items inside of a menu.\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.items;\n    /**\n     * Menu content that will be rendered lazily.\n     * \\@docs-private\n     * @type {?}\n     */\n    _MatMenuBase.prototype.lazyContent;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._overlapTrigger;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._hasBackdrop;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._previousPanelClass;\n    /**\n     * Event emitted when the menu is closed.\n     * @type {?}\n     */\n    _MatMenuBase.prototype.closed;\n    /**\n     * Event emitted when the menu is closed.\n     * @deprecated Switch to `closed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    _MatMenuBase.prototype.close;\n    /** @type {?} */\n    _MatMenuBase.prototype.panelId;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    _MatMenuBase.prototype._defaultOptions;\n}\n/**\n * \\@docs-private We show the \"_MatMenu\" class as \"MatMenu\" in the docs.\n */\nclass MatMenu extends _MatMenuBase {\n}\nMatMenu.ɵfac = function MatMenu_Factory(t) { return ɵMatMenu_BaseFactory(t || MatMenu); };\nMatMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenu, features: [ɵngcc0.ɵɵInheritDefinitionFeature] });\nconst ɵMatMenu_BaseFactory = ɵngcc0.ɵɵgetInheritedFactory(MatMenu);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenu, [{\n        type: Directive\n    }], null, null); })();\n// Note on the weird inheritance setup: we need three classes, because the MDC-based menu has to\n// extend `MatMenu`, however keeping a reference to it will cause the inlined template and styles\n// to be retained as well. The MDC menu also has to provide itself as a `MatMenu` in order for\n// queries and DI to work correctly, while still not referencing the actual menu class.\n// Class responsibility is split up as follows:\n// * _MatMenuBase - provides all the functionality without any of the Angular metadata.\n// * MatMenu - keeps the same name symbol name as the current menu and\n// is used as a provider for DI and query purposes.\n// * _MatMenu - the actual menu component implementation with the Angular metadata that should\n// be tree shaken away for MDC.\n/**\n * \\@docs-public MatMenu\n */\n// tslint:disable-next-line:class-name\nclass _MatMenu extends MatMenu {\n    /**\n     * @param {?} elementRef\n     * @param {?} ngZone\n     * @param {?} defaultOptions\n     */\n    constructor(elementRef, ngZone, defaultOptions) {\n        super(elementRef, ngZone, defaultOptions);\n    }\n}\n_MatMenu.ɵfac = function _MatMenu_Factory(t) { return new (t || _MatMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_DEFAULT_OPTIONS)); };\n_MatMenu.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: _MatMenu, selectors: [[\"mat-menu\"]], exportAs: [\"matMenu\"], features: [ɵngcc0.ɵɵProvidersFeature([\n            { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n            { provide: MatMenu, useExisting: _MatMenu }\n        ]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 1, vars: 0, consts: [[\"tabindex\", \"-1\", \"role\", \"menu\", 1, \"mat-menu-panel\", 3, \"id\", \"ngClass\", \"keydown\", \"click\"], [1, \"mat-menu-content\"]], template: function _MatMenu_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵtemplate(0, _MatMenu_ng_template_0_Template, 3, 6, \"ng-template\");\n    } }, directives: [ɵngcc3.NgClass], styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"], encapsulation: 2, data: { animation: [\n            matMenuAnimations.transformMenu,\n            matMenuAnimations.fadeInItems\n        ] }, changeDetection: 0 });\n/** @nocollapse */\n_MatMenu.ctorParameters = () => [\n    { type: ElementRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_DEFAULT_OPTIONS,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenu, [{\n        type: Component,\n        args: [{\n                selector: 'mat-menu',\n                template: \"<ng-template>\\n  <div\\n    class=\\\"mat-menu-panel\\\"\\n    [id]=\\\"panelId\\\"\\n    [ngClass]=\\\"_classList\\\"\\n    (keydown)=\\\"_handleKeydown($event)\\\"\\n    (click)=\\\"closed.emit('click')\\\"\\n    [@transformMenu]=\\\"_panelAnimationState\\\"\\n    (@transformMenu.start)=\\\"_onAnimationStart($event)\\\"\\n    (@transformMenu.done)=\\\"_onAnimationDone($event)\\\"\\n    tabindex=\\\"-1\\\"\\n    role=\\\"menu\\\"\\n    [attr.aria-label]=\\\"ariaLabel || null\\\"\\n    [attr.aria-labelledby]=\\\"ariaLabelledby || null\\\"\\n    [attr.aria-describedby]=\\\"ariaDescribedby || null\\\">\\n    <div class=\\\"mat-menu-content\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\",\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                exportAs: 'matMenu',\n                animations: [\n                    matMenuAnimations.transformMenu,\n                    matMenuAnimations.fadeInItems\n                ],\n                providers: [\n                    { provide: MAT_MENU_PANEL, useExisting: MatMenu },\n                    { provide: MatMenu, useExisting: _MatMenu }\n                ],\n                styles: [\".mat-menu-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;max-height:calc(100vh - 48px);border-radius:4px;outline:0;min-height:64px}.mat-menu-panel.ng-animating{pointer-events:none}.cdk-high-contrast-active .mat-menu-panel{outline:solid 1px}.mat-menu-content:not(:empty){padding-top:8px;padding-bottom:8px}.mat-menu-item{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative}.mat-menu-item::-moz-focus-inner{border:0}.mat-menu-item[disabled]{cursor:default}[dir=rtl] .mat-menu-item{text-align:right}.mat-menu-item .mat-icon{margin-right:16px;vertical-align:middle}.mat-menu-item .mat-icon svg{vertical-align:top}[dir=rtl] .mat-menu-item .mat-icon{margin-left:16px;margin-right:0}.mat-menu-item[disabled]{pointer-events:none}.cdk-high-contrast-active .mat-menu-item.cdk-program-focused,.cdk-high-contrast-active .mat-menu-item.cdk-keyboard-focused,.cdk-high-contrast-active .mat-menu-item-highlighted{outline:dotted 1px}.mat-menu-item-submenu-trigger{padding-right:32px}.mat-menu-item-submenu-trigger::after{width:0;height:0;border-style:solid;border-width:5px 0 5px 5px;border-color:transparent transparent transparent currentColor;content:\\\"\\\";display:inline-block;position:absolute;top:50%;right:16px;transform:translateY(-50%)}[dir=rtl] .mat-menu-item-submenu-trigger{padding-right:16px;padding-left:32px}[dir=rtl] .mat-menu-item-submenu-trigger::after{right:auto;left:16px;transform:rotateY(180deg) translateY(-50%)}button.mat-menu-item{width:100%}.mat-menu-item .mat-menu-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_DEFAULT_OPTIONS]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-trigger.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token that determines the scroll handling while the menu is open.\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY = new InjectionToken('mat-menu-scroll-strategy');\n/**\n * \\@docs-private\n * @param {?} overlay\n * @return {?}\n */\nfunction MAT_MENU_SCROLL_STRATEGY_FACTORY(overlay) {\n    return (/**\n     * @return {?}\n     */\n    () => overlay.scrollStrategies.reposition());\n}\n/**\n * \\@docs-private\n * @type {?}\n */\nconst MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_MENU_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_MENU_SCROLL_STRATEGY_FACTORY,\n};\n/**\n * Default top padding of the menu panel.\n * @type {?}\n */\nconst MENU_PANEL_TOP_PADDING = 8;\n/**\n * Options for binding a passive event listener.\n * @type {?}\n */\nconst passiveEventListenerOptions = normalizePassiveListenerOptions({ passive: true });\n// TODO(andrewseguin): Remove the kebab versions in favor of camelCased attribute selectors\n/**\n * Directive applied to an element that should trigger a `mat-menu`.\n */\nclass MatMenuTrigger {\n    /**\n     * @param {?} _overlay\n     * @param {?} _element\n     * @param {?} _viewContainerRef\n     * @param {?} scrollStrategy\n     * @param {?} _parentMenu\n     * @param {?} _menuItemInstance\n     * @param {?} _dir\n     * @param {?=} _focusMonitor\n     */\n    constructor(_overlay, _element, _viewContainerRef, scrollStrategy, _parentMenu, _menuItemInstance, _dir, _focusMonitor) {\n        this._overlay = _overlay;\n        this._element = _element;\n        this._viewContainerRef = _viewContainerRef;\n        this._parentMenu = _parentMenu;\n        this._menuItemInstance = _menuItemInstance;\n        this._dir = _dir;\n        this._focusMonitor = _focusMonitor;\n        this._overlayRef = null;\n        this._menuOpen = false;\n        this._closingActionsSubscription = Subscription.EMPTY;\n        this._hoverSubscription = Subscription.EMPTY;\n        this._menuCloseSubscription = Subscription.EMPTY;\n        /**\n         * Handles touch start events on the trigger.\n         * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n         */\n        this._handleTouchStart = (/**\n         * @return {?}\n         */\n        () => this._openedBy = 'touch');\n        // Tracking input type is necessary so it's possible to only auto-focus\n        // the first item of the list when the menu is opened via the keyboard\n        this._openedBy = null;\n        /**\n         * Whether focus should be restored when the menu is closed.\n         * Note that disabling this option can have accessibility implications\n         * and it's up to you to manage focus, if you decide to turn it off.\n         */\n        this.restoreFocus = true;\n        /**\n         * Event emitted when the associated menu is opened.\n         */\n        this.menuOpened = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is opened.\n         * @deprecated Switch to `menuOpened` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuOpen = this.menuOpened;\n        /**\n         * Event emitted when the associated menu is closed.\n         */\n        this.menuClosed = new EventEmitter();\n        /**\n         * Event emitted when the associated menu is closed.\n         * @deprecated Switch to `menuClosed` instead\n         * \\@breaking-change 8.0.0\n         */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onMenuClose = this.menuClosed;\n        _element.nativeElement.addEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        if (_menuItemInstance) {\n            _menuItemInstance._triggersSubmenu = this.triggersSubmenu();\n        }\n        this._scrollStrategy = scrollStrategy;\n    }\n    /**\n     * @deprecated\n     * \\@breaking-change 8.0.0\n     * @return {?}\n     */\n    get _deprecatedMatMenuTriggerFor() { return this.menu; }\n    /**\n     * @param {?} v\n     * @return {?}\n     */\n    set _deprecatedMatMenuTriggerFor(v) {\n        this.menu = v;\n    }\n    /**\n     * References the menu instance that the trigger is associated with.\n     * @return {?}\n     */\n    get menu() { return this._menu; }\n    /**\n     * @param {?} menu\n     * @return {?}\n     */\n    set menu(menu) {\n        if (menu === this._menu) {\n            return;\n        }\n        this._menu = menu;\n        this._menuCloseSubscription.unsubscribe();\n        if (menu) {\n            this._menuCloseSubscription = menu.close.asObservable().subscribe((/**\n             * @param {?} reason\n             * @return {?}\n             */\n            reason => {\n                this._destroyMenu();\n                // If a click closed the menu, we should close the entire chain of nested menus.\n                if ((reason === 'click' || reason === 'tab') && this._parentMenu) {\n                    this._parentMenu.closed.emit(reason);\n                }\n            }));\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._checkMenu();\n        this._handleHover();\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._overlayRef = null;\n        }\n        this._element.nativeElement.removeEventListener('touchstart', this._handleTouchStart, passiveEventListenerOptions);\n        this._menuCloseSubscription.unsubscribe();\n        this._closingActionsSubscription.unsubscribe();\n        this._hoverSubscription.unsubscribe();\n    }\n    /**\n     * Whether the menu is open.\n     * @return {?}\n     */\n    get menuOpen() {\n        return this._menuOpen;\n    }\n    /**\n     * The text direction of the containing app.\n     * @return {?}\n     */\n    get dir() {\n        return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n    }\n    /**\n     * Whether the menu triggers a sub-menu or a top-level one.\n     * @return {?}\n     */\n    triggersSubmenu() {\n        return !!(this._menuItemInstance && this._parentMenu);\n    }\n    /**\n     * Toggles the menu between the open and closed states.\n     * @return {?}\n     */\n    toggleMenu() {\n        return this._menuOpen ? this.closeMenu() : this.openMenu();\n    }\n    /**\n     * Opens the menu.\n     * @return {?}\n     */\n    openMenu() {\n        if (this._menuOpen) {\n            return;\n        }\n        this._checkMenu();\n        /** @type {?} */\n        const overlayRef = this._createOverlay();\n        /** @type {?} */\n        const overlayConfig = overlayRef.getConfig();\n        this._setPosition((/** @type {?} */ (overlayConfig.positionStrategy)));\n        overlayConfig.hasBackdrop = this.menu.hasBackdrop == null ? !this.triggersSubmenu() :\n            this.menu.hasBackdrop;\n        overlayRef.attach(this._getPortal());\n        if (this.menu.lazyContent) {\n            this.menu.lazyContent.attach(this.menuData);\n        }\n        this._closingActionsSubscription = this._menuClosingActions().subscribe((/**\n         * @return {?}\n         */\n        () => this.closeMenu()));\n        this._initMenu();\n        if (this.menu instanceof MatMenu) {\n            this.menu._startAnimation();\n        }\n    }\n    /**\n     * Closes the menu.\n     * @return {?}\n     */\n    closeMenu() {\n        this.menu.close.emit();\n    }\n    /**\n     * Focuses the menu trigger.\n     * @param {?=} origin Source of the menu trigger's focus.\n     * @param {?=} options\n     * @return {?}\n     */\n    focus(origin = 'program', options) {\n        if (this._focusMonitor) {\n            this._focusMonitor.focusVia(this._element, origin, options);\n        }\n        else {\n            this._element.nativeElement.focus(options);\n        }\n    }\n    /**\n     * Closes the menu and does the necessary cleanup.\n     * @private\n     * @return {?}\n     */\n    _destroyMenu() {\n        if (!this._overlayRef || !this.menuOpen) {\n            return;\n        }\n        /** @type {?} */\n        const menu = this.menu;\n        this._closingActionsSubscription.unsubscribe();\n        this._overlayRef.detach();\n        this._restoreFocus();\n        if (menu instanceof MatMenu) {\n            menu._resetAnimation();\n            if (menu.lazyContent) {\n                // Wait for the exit animation to finish before detaching the content.\n                menu._animationDone\n                    .pipe(filter((/**\n                 * @param {?} event\n                 * @return {?}\n                 */\n                event => event.toState === 'void')), take(1), \n                // Interrupt if the content got re-attached.\n                takeUntil(menu.lazyContent._attached))\n                    .subscribe({\n                    next: (/**\n                     * @return {?}\n                     */\n                    () => (/** @type {?} */ (menu.lazyContent)).detach()),\n                    // No matter whether the content got re-attached, reset the menu.\n                    complete: (/**\n                     * @return {?}\n                     */\n                    () => this._setIsMenuOpen(false))\n                });\n            }\n            else {\n                this._setIsMenuOpen(false);\n            }\n        }\n        else {\n            this._setIsMenuOpen(false);\n            if (menu.lazyContent) {\n                menu.lazyContent.detach();\n            }\n        }\n    }\n    /**\n     * This method sets the menu state to open and focuses the first item if\n     * the menu was opened via the keyboard.\n     * @private\n     * @return {?}\n     */\n    _initMenu() {\n        this.menu.parentMenu = this.triggersSubmenu() ? this._parentMenu : undefined;\n        this.menu.direction = this.dir;\n        this._setMenuElevation();\n        this._setIsMenuOpen(true);\n        this.menu.focusFirstItem(this._openedBy || 'program');\n    }\n    /**\n     * Updates the menu elevation based on the amount of parent menus that it has.\n     * @private\n     * @return {?}\n     */\n    _setMenuElevation() {\n        if (this.menu.setElevation) {\n            /** @type {?} */\n            let depth = 0;\n            /** @type {?} */\n            let parentMenu = this.menu.parentMenu;\n            while (parentMenu) {\n                depth++;\n                parentMenu = parentMenu.parentMenu;\n            }\n            this.menu.setElevation(depth);\n        }\n    }\n    /**\n     * Restores focus to the element that was focused before the menu was open.\n     * @private\n     * @return {?}\n     */\n    _restoreFocus() {\n        // We should reset focus if the user is navigating using a keyboard or\n        // if we have a top-level trigger which might cause focus to be lost\n        // when clicking on the backdrop.\n        if (this.restoreFocus) {\n            if (!this._openedBy) {\n                // Note that the focus style will show up both for `program` and\n                // `keyboard` so we don't have to specify which one it is.\n                this.focus();\n            }\n            else if (!this.triggersSubmenu()) {\n                this.focus(this._openedBy);\n            }\n        }\n        this._openedBy = null;\n    }\n    // set state rather than toggle to support triggers sharing a menu\n    /**\n     * @private\n     * @param {?} isOpen\n     * @return {?}\n     */\n    _setIsMenuOpen(isOpen) {\n        this._menuOpen = isOpen;\n        this._menuOpen ? this.menuOpened.emit() : this.menuClosed.emit();\n        if (this.triggersSubmenu()) {\n            this._menuItemInstance._highlighted = isOpen;\n        }\n    }\n    /**\n     * This method checks that a valid instance of MatMenu has been passed into\n     * matMenuTriggerFor. If not, an exception is thrown.\n     * @private\n     * @return {?}\n     */\n    _checkMenu() {\n        if (!this.menu) {\n            throwMatMenuMissingError();\n        }\n    }\n    /**\n     * This method creates the overlay from the provided menu's template and saves its\n     * OverlayRef so that it can be attached to the DOM when openMenu is called.\n     * @private\n     * @return {?}\n     */\n    _createOverlay() {\n        if (!this._overlayRef) {\n            /** @type {?} */\n            const config = this._getOverlayConfig();\n            this._subscribeToPositions((/** @type {?} */ (config.positionStrategy)));\n            this._overlayRef = this._overlay.create(config);\n            // Consume the `keydownEvents` in order to prevent them from going to another overlay.\n            // Ideally we'd also have our keyboard event logic in here, however doing so will\n            // break anybody that may have implemented the `MatMenuPanel` themselves.\n            this._overlayRef.keydownEvents().subscribe();\n        }\n        return this._overlayRef;\n    }\n    /**\n     * This method builds the configuration object needed to create the overlay, the OverlayState.\n     * @private\n     * @return {?} OverlayConfig\n     */\n    _getOverlayConfig() {\n        return new OverlayConfig({\n            positionStrategy: this._overlay.position()\n                .flexibleConnectedTo(this._element)\n                .withLockedPosition()\n                .withTransformOriginOn('.mat-menu-panel, .mat-mdc-menu-panel'),\n            backdropClass: this.menu.backdropClass || 'cdk-overlay-transparent-backdrop',\n            scrollStrategy: this._scrollStrategy(),\n            direction: this._dir\n        });\n    }\n    /**\n     * Listens to changes in the position of the overlay and sets the correct classes\n     * on the menu based on the new position. This ensures the animation origin is always\n     * correct, even if a fallback position is used for the overlay.\n     * @private\n     * @param {?} position\n     * @return {?}\n     */\n    _subscribeToPositions(position) {\n        if (this.menu.setPositionClasses) {\n            position.positionChanges.subscribe((/**\n             * @param {?} change\n             * @return {?}\n             */\n            change => {\n                /** @type {?} */\n                const posX = change.connectionPair.overlayX === 'start' ? 'after' : 'before';\n                /** @type {?} */\n                const posY = change.connectionPair.overlayY === 'top' ? 'below' : 'above';\n                (/** @type {?} */ (this.menu.setPositionClasses))(posX, posY);\n            }));\n        }\n    }\n    /**\n     * Sets the appropriate positions on a position strategy\n     * so the overlay connects with the trigger correctly.\n     * @private\n     * @param {?} positionStrategy Strategy whose position to update.\n     * @return {?}\n     */\n    _setPosition(positionStrategy) {\n        let [originX, originFallbackX] = this.menu.xPosition === 'before' ? ['end', 'start'] : ['start', 'end'];\n        let [overlayY, overlayFallbackY] = this.menu.yPosition === 'above' ? ['bottom', 'top'] : ['top', 'bottom'];\n        let [originY, originFallbackY] = [overlayY, overlayFallbackY];\n        let [overlayX, overlayFallbackX] = [originX, originFallbackX];\n        /** @type {?} */\n        let offsetY = 0;\n        if (this.triggersSubmenu()) {\n            // When the menu is a sub-menu, it should always align itself\n            // to the edges of the trigger, instead of overlapping it.\n            overlayFallbackX = originX = this.menu.xPosition === 'before' ? 'start' : 'end';\n            originFallbackX = overlayX = originX === 'end' ? 'start' : 'end';\n            offsetY = overlayY === 'bottom' ? MENU_PANEL_TOP_PADDING : -MENU_PANEL_TOP_PADDING;\n        }\n        else if (!this.menu.overlapTrigger) {\n            originY = overlayY === 'top' ? 'bottom' : 'top';\n            originFallbackY = overlayFallbackY === 'top' ? 'bottom' : 'top';\n        }\n        positionStrategy.withPositions([\n            { originX, originY, overlayX, overlayY, offsetY },\n            { originX: originFallbackX, originY, overlayX: overlayFallbackX, overlayY, offsetY },\n            {\n                originX,\n                originY: originFallbackY,\n                overlayX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            },\n            {\n                originX: originFallbackX,\n                originY: originFallbackY,\n                overlayX: overlayFallbackX,\n                overlayY: overlayFallbackY,\n                offsetY: -offsetY\n            }\n        ]);\n    }\n    /**\n     * Returns a stream that emits whenever an action that should close the menu occurs.\n     * @private\n     * @return {?}\n     */\n    _menuClosingActions() {\n        /** @type {?} */\n        const backdrop = (/** @type {?} */ (this._overlayRef)).backdropClick();\n        /** @type {?} */\n        const detachments = (/** @type {?} */ (this._overlayRef)).detachments();\n        /** @type {?} */\n        const parentClose = this._parentMenu ? this._parentMenu.closed : of();\n        /** @type {?} */\n        const hover = this._parentMenu ? this._parentMenu._hovered().pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active !== this._menuItemInstance)), filter((/**\n         * @return {?}\n         */\n        () => this._menuOpen))) : of();\n        return merge(backdrop, parentClose, hover, detachments);\n    }\n    /**\n     * Handles mouse presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleMousedown(event) {\n        if (!isFakeMousedownFromScreenReader(event)) {\n            // Since right or middle button clicks won't trigger the `click` event,\n            // we shouldn't consider the menu as opened by mouse in those cases.\n            this._openedBy = event.button === 0 ? 'mouse' : null;\n            // Since clicking on the trigger won't close the menu if it opens a sub-menu,\n            // we should prevent focus from moving onto it via click to avoid the\n            // highlight from lingering on the menu item.\n            if (this.triggersSubmenu()) {\n                event.preventDefault();\n            }\n        }\n    }\n    /**\n     * Handles key presses on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleKeydown(event) {\n        /** @type {?} */\n        const keyCode = event.keyCode;\n        if (this.triggersSubmenu() && ((keyCode === RIGHT_ARROW && this.dir === 'ltr') ||\n            (keyCode === LEFT_ARROW && this.dir === 'rtl'))) {\n            this.openMenu();\n        }\n    }\n    /**\n     * Handles click events on the trigger.\n     * @param {?} event\n     * @return {?}\n     */\n    _handleClick(event) {\n        if (this.triggersSubmenu()) {\n            // Stop event propagation to avoid closing the parent menu.\n            event.stopPropagation();\n            this.openMenu();\n        }\n        else {\n            this.toggleMenu();\n        }\n    }\n    /**\n     * Handles the cases where the user hovers over the trigger.\n     * @private\n     * @return {?}\n     */\n    _handleHover() {\n        // Subscribe to changes in the hovered item in order to toggle the panel.\n        if (!this.triggersSubmenu()) {\n            return;\n        }\n        this._hoverSubscription = this._parentMenu._hovered()\n            // Since we might have multiple competing triggers for the same menu (e.g. a sub-menu\n            // with different data and triggers), we have to delay it by a tick to ensure that\n            // it won't be closed immediately after it is opened.\n            .pipe(filter((/**\n         * @param {?} active\n         * @return {?}\n         */\n        active => active === this._menuItemInstance && !active.disabled)), delay(0, asapScheduler))\n            .subscribe((/**\n         * @return {?}\n         */\n        () => {\n            this._openedBy = 'mouse';\n            // If the same menu is used between multiple triggers, it might still be animating\n            // while the new trigger tries to re-open it. Wait for the animation to finish\n            // before doing so. Also interrupt if the user moves to another item.\n            if (this.menu instanceof MatMenu && this.menu._isAnimating) {\n                // We need the `delay(0)` here in order to avoid\n                // 'changed after checked' errors in some cases. See #12194.\n                this.menu._animationDone\n                    .pipe(take(1), delay(0, asapScheduler), takeUntil(this._parentMenu._hovered()))\n                    .subscribe((/**\n                 * @return {?}\n                 */\n                () => this.openMenu()));\n            }\n            else {\n                this.openMenu();\n            }\n        }));\n    }\n    /**\n     * Gets the portal that should be attached to the overlay.\n     * @private\n     * @return {?}\n     */\n    _getPortal() {\n        // Note that we can avoid this check by keeping the portal on the menu panel.\n        // While it would be cleaner, we'd have to introduce another required method on\n        // `MatMenuPanel`, making it harder to consume.\n        if (!this._portal || this._portal.templateRef !== this.menu.templateRef) {\n            this._portal = new TemplatePortal(this.menu.templateRef, this._viewContainerRef);\n        }\n        return this._portal;\n    }\n}\nMatMenuTrigger.ɵfac = function MatMenuTrigger_Factory(t) { return new (t || MatMenuTrigger)(ɵngcc0.ɵɵdirectiveInject(ɵngcc4.Overlay), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(MAT_MENU_SCROLL_STRATEGY), ɵngcc0.ɵɵdirectiveInject(MatMenu, 8), ɵngcc0.ɵɵdirectiveInject(MatMenuItem, 10), ɵngcc0.ɵɵdirectiveInject(ɵngcc5.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.FocusMonitor)); };\nMatMenuTrigger.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatMenuTrigger, selectors: [[\"\", \"mat-menu-trigger-for\", \"\"], [\"\", \"matMenuTriggerFor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"mat-menu-trigger\"], hostVars: 2, hostBindings: function MatMenuTrigger_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function MatMenuTrigger_mousedown_HostBindingHandler($event) { return ctx._handleMousedown($event); })(\"keydown\", function MatMenuTrigger_keydown_HostBindingHandler($event) { return ctx._handleKeydown($event); })(\"click\", function MatMenuTrigger_click_HostBindingHandler($event) { return ctx._handleClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.menuOpen || null)(\"aria-controls\", ctx.menuOpen ? ctx.menu.panelId : null);\n    } }, inputs: { restoreFocus: [\"matMenuTriggerRestoreFocus\", \"restoreFocus\"], _deprecatedMatMenuTriggerFor: [\"mat-menu-trigger-for\", \"_deprecatedMatMenuTriggerFor\"], menu: [\"matMenuTriggerFor\", \"menu\"], menuData: [\"matMenuTriggerData\", \"menuData\"] }, outputs: { menuOpened: \"menuOpened\", onMenuOpen: \"onMenuOpen\", menuClosed: \"menuClosed\", onMenuClose: \"onMenuClose\" }, exportAs: [\"matMenuTrigger\"] });\n/** @nocollapse */\nMatMenuTrigger.ctorParameters = () => [\n    { type: Overlay },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: undefined, decorators: [{ type: Inject, args: [MAT_MENU_SCROLL_STRATEGY,] }] },\n    { type: MatMenu, decorators: [{ type: Optional }] },\n    { type: MatMenuItem, decorators: [{ type: Optional }, { type: Self }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: FocusMonitor }\n];\nMatMenuTrigger.propDecorators = {\n    _deprecatedMatMenuTriggerFor: [{ type: Input, args: ['mat-menu-trigger-for',] }],\n    menu: [{ type: Input, args: ['matMenuTriggerFor',] }],\n    menuData: [{ type: Input, args: ['matMenuTriggerData',] }],\n    restoreFocus: [{ type: Input, args: ['matMenuTriggerRestoreFocus',] }],\n    menuOpened: [{ type: Output }],\n    onMenuOpen: [{ type: Output }],\n    menuClosed: [{ type: Output }],\n    onMenuClose: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuTrigger, [{\n        type: Directive,\n        args: [{\n                selector: `[mat-menu-trigger-for], [matMenuTriggerFor]`,\n                host: {\n                    'class': 'mat-menu-trigger',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'menuOpen || null',\n                    '[attr.aria-controls]': 'menuOpen ? menu.panelId : null',\n                    '(mousedown)': '_handleMousedown($event)',\n                    '(keydown)': '_handleKeydown($event)',\n                    '(click)': '_handleClick($event)'\n                },\n                exportAs: 'matMenuTrigger'\n            }]\n    }], function () { return [{ type: ɵngcc4.Overlay }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.ViewContainerRef }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [MAT_MENU_SCROLL_STRATEGY]\n            }] }, { type: MatMenu, decorators: [{\n                type: Optional\n            }] }, { type: MatMenuItem, decorators: [{\n                type: Optional\n            }, {\n                type: Self\n            }] }, { type: ɵngcc5.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ɵngcc1.FocusMonitor }]; }, { restoreFocus: [{\n            type: Input,\n            args: ['matMenuTriggerRestoreFocus']\n        }], menuOpened: [{\n            type: Output\n        }], onMenuOpen: [{\n            type: Output\n        }], menuClosed: [{\n            type: Output\n        }], onMenuClose: [{\n            type: Output\n        }], _deprecatedMatMenuTriggerFor: [{\n            type: Input,\n            args: ['mat-menu-trigger-for']\n        }], menu: [{\n            type: Input,\n            args: ['matMenuTriggerFor']\n        }], menuData: [{\n            type: Input,\n            args: ['matMenuTriggerData']\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._portal;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlayRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuOpen;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._closingActionsSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._hoverSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuCloseSubscription;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._scrollStrategy;\n    /**\n     * Handles touch start events on the trigger.\n     * Needs to be an arrow function so we can easily use addEventListener and removeEventListener.\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._handleTouchStart;\n    /** @type {?} */\n    MatMenuTrigger.prototype._openedBy;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menu;\n    /**\n     * Data to be passed along to any lazily-rendered content.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuData;\n    /**\n     * Whether focus should be restored when the menu is closed.\n     * Note that disabling this option can have accessibility implications\n     * and it's up to you to manage focus, if you decide to turn it off.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.restoreFocus;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuOpened;\n    /**\n     * Event emitted when the associated menu is opened.\n     * @deprecated Switch to `menuOpened` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuOpen;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.menuClosed;\n    /**\n     * Event emitted when the associated menu is closed.\n     * @deprecated Switch to `menuClosed` instead\n     * \\@breaking-change 8.0.0\n     * @type {?}\n     */\n    MatMenuTrigger.prototype.onMenuClose;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._overlay;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._element;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._viewContainerRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._parentMenu;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._menuItemInstance;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._dir;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatMenuTrigger.prototype._focusMonitor;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Used by both the current `MatMenuModule` and the MDC `MatMenuModule`\n * to declare the menu-related directives.\n */\n// tslint:disable-next-line:class-name\nclass _MatMenuDirectivesModule {\n}\n_MatMenuDirectivesModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: _MatMenuDirectivesModule });\n_MatMenuDirectivesModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function _MatMenuDirectivesModule_Factory(t) { return new (t || _MatMenuDirectivesModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(_MatMenuDirectivesModule, { declarations: function () { return [MatMenuTrigger,\n        MatMenuContent]; }, exports: function () { return [MatMenuTrigger,\n        MatMenuContent,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(_MatMenuDirectivesModule, [{\n        type: NgModule,\n        args: [{\n                exports: [MatMenuTrigger, MatMenuContent, MatCommonModule],\n                declarations: [\n                    MatMenuTrigger,\n                    MatMenuContent,\n                ],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\nclass MatMenuModule {\n}\nMatMenuModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatMenuModule });\nMatMenuModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatMenuModule_Factory(t) { return new (t || MatMenuModule)(); }, providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[\n            CommonModule,\n            MatCommonModule,\n            MatRippleModule,\n            OverlayModule,\n            _MatMenuDirectivesModule,\n        ],\n        CdkScrollableModule, MatCommonModule,\n        _MatMenuDirectivesModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatMenuModule, { declarations: function () { return [_MatMenu,\n        MatMenuItem]; }, imports: function () { return [CommonModule,\n        MatCommonModule,\n        MatRippleModule,\n        OverlayModule,\n        _MatMenuDirectivesModule]; }, exports: function () { return [CdkScrollableModule, MatCommonModule,\n        _MatMenu,\n        MatMenuItem,\n        _MatMenuDirectivesModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatMenuModule, [{\n        type: NgModule,\n        args: [{\n                imports: [\n                    CommonModule,\n                    MatCommonModule,\n                    MatRippleModule,\n                    OverlayModule,\n                    _MatMenuDirectivesModule,\n                ],\n                exports: [CdkScrollableModule, MatCommonModule, _MatMenu, MatMenuItem, _MatMenuDirectivesModule],\n                declarations: [_MatMenu, MatMenuItem],\n                providers: [MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/menu-positions.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/menu/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_MENU_DEFAULT_OPTIONS, MAT_MENU_PANEL, MAT_MENU_SCROLL_STRATEGY, MatMenu, MatMenuContent, MatMenuItem, MatMenuModule, MatMenuTrigger, _MatMenu, _MatMenuBase, _MatMenuDirectivesModule, fadeInItems, matMenuAnimations, transformMenu, MAT_MENU_DEFAULT_OPTIONS_FACTORY as ɵangular_material_src_material_menu_menu_a, MAT_MENU_SCROLL_STRATEGY_FACTORY as ɵangular_material_src_material_menu_menu_b, MAT_MENU_SCROLL_STRATEGY_FACTORY_PROVIDER as ɵangular_material_src_material_menu_menu_c };\n\n//# sourceMappingURL=menu.js.map","import { Directive, isDevMode, Component, ChangeDetectionStrategy, ViewEncapsulation, ElementRef, Inject, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { Platform } from '@angular/cdk/platform';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Boilerplate for applying mixins to MatToolbar.\n/**\n * \\@docs-private\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\n\nconst _c0 = [\"*\", [[\"mat-toolbar-row\"]]];\nconst _c1 = [\"*\", \"mat-toolbar-row\"];\nclass MatToolbarBase {\n    /**\n     * @param {?} _elementRef\n     */\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}\nif (false) {\n    /** @type {?} */\n    MatToolbarBase.prototype._elementRef;\n}\n/** @type {?} */\nconst _MatToolbarMixinBase = mixinColor(MatToolbarBase);\nclass MatToolbarRow {\n}\nMatToolbarRow.ɵfac = function MatToolbarRow_Factory(t) { return new (t || MatToolbarRow)(); };\nMatToolbarRow.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: MatToolbarRow, selectors: [[\"mat-toolbar-row\"]], hostAttrs: [1, \"mat-toolbar-row\"], exportAs: [\"matToolbarRow\"] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarRow, [{\n        type: Directive,\n        args: [{\n                selector: 'mat-toolbar-row',\n                exportAs: 'matToolbarRow',\n                host: { 'class': 'mat-toolbar-row' }\n            }]\n    }], null, null); })();\nclass MatToolbar extends _MatToolbarMixinBase {\n    /**\n     * @param {?} elementRef\n     * @param {?} _platform\n     * @param {?=} document\n     */\n    constructor(elementRef, _platform, document) {\n        super(elementRef);\n        this._platform = _platform;\n        // TODO: make the document a required param when doing breaking changes.\n        this._document = document;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!isDevMode() || !this._platform.isBrowser) {\n            return;\n        }\n        this._checkToolbarMixedModes();\n        this._toolbarRows.changes.subscribe((/**\n         * @return {?}\n         */\n        () => this._checkToolbarMixedModes()));\n    }\n    /**\n     * Throws an exception when developers are attempting to combine the different toolbar row modes.\n     * @private\n     * @return {?}\n     */\n    _checkToolbarMixedModes() {\n        if (!this._toolbarRows.length) {\n            return;\n        }\n        // Check if there are any other DOM nodes that can display content but aren't inside of\n        // a <mat-toolbar-row> element.\n        /** @type {?} */\n        const isCombinedUsage = Array.from(this._elementRef.nativeElement.childNodes)\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !(node.classList && node.classList.contains('mat-toolbar-row'))))\n            .filter((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => node.nodeType !== (this._document ? this._document.COMMENT_NODE : 8)))\n            .some((/**\n         * @param {?} node\n         * @return {?}\n         */\n        node => !!(node.textContent && node.textContent.trim())));\n        if (isCombinedUsage) {\n            throwToolbarMixedModesError();\n        }\n    }\n}\nMatToolbar.ɵfac = function MatToolbar_Factory(t) { return new (t || MatToolbar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.Platform), ɵngcc0.ɵɵdirectiveInject(DOCUMENT)); };\nMatToolbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: MatToolbar, selectors: [[\"mat-toolbar\"]], contentQueries: function MatToolbar_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, MatToolbarRow, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._toolbarRows = _t);\n    } }, hostAttrs: [1, \"mat-toolbar\"], hostVars: 4, hostBindings: function MatToolbar_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"mat-toolbar-multiple-rows\", ctx._toolbarRows.length > 0)(\"mat-toolbar-single-row\", ctx._toolbarRows.length === 0);\n    } }, inputs: { color: \"color\" }, exportAs: [\"matToolbar\"], features: [ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 2, vars: 0, template: function MatToolbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef(_c0);\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵprojection(1, 1);\n    } }, styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nMatToolbar.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Platform },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\nMatToolbar.propDecorators = {\n    _toolbarRows: [{ type: ContentChildren, args: [MatToolbarRow, { descendants: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbar, [{\n        type: Component,\n        args: [{\n                selector: 'mat-toolbar',\n                exportAs: 'matToolbar',\n                template: \"<ng-content></ng-content>\\n<ng-content select=\\\"mat-toolbar-row\\\"></ng-content>\\n\",\n                inputs: ['color'],\n                host: {\n                    'class': 'mat-toolbar',\n                    '[class.mat-toolbar-multiple-rows]': '_toolbarRows.length > 0',\n                    '[class.mat-toolbar-single-row]': '_toolbarRows.length === 0'\n                },\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                styles: [\".cdk-high-contrast-active .mat-toolbar{outline:solid 1px}.mat-toolbar-row,.mat-toolbar-single-row{display:flex;box-sizing:border-box;padding:0 16px;width:100%;flex-direction:row;align-items:center;white-space:nowrap}.mat-toolbar-multiple-rows{display:flex;box-sizing:border-box;flex-direction:column;width:100%}.mat-toolbar-multiple-rows{min-height:64px}.mat-toolbar-row,.mat-toolbar-single-row{height:64px}@media(max-width: 599px){.mat-toolbar-multiple-rows{min-height:56px}.mat-toolbar-row,.mat-toolbar-single-row{height:56px}}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.Platform }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, { _toolbarRows: [{\n            type: ContentChildren,\n            args: [MatToolbarRow, { descendants: true }]\n        }] }); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._document;\n    /**\n     * Reference to all toolbar row elements that have been projected.\n     * @type {?}\n     */\n    MatToolbar.prototype._toolbarRows;\n    /**\n     * @type {?}\n     * @private\n     */\n    MatToolbar.prototype._platform;\n}\n/**\n * Throws an exception when attempting to combine the different toolbar row modes.\n * \\@docs-private\n * @return {?}\n */\nfunction throwToolbarMixedModesError() {\n    throw Error('MatToolbar: Attempting to combine different toolbar modes. ' +\n        'Either specify multiple `<mat-toolbar-row>` elements explicitly or just place content ' +\n        'inside of a `<mat-toolbar>` for a single row.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/toolbar-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass MatToolbarModule {\n}\nMatToolbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: MatToolbarModule });\nMatToolbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function MatToolbarModule_Factory(t) { return new (t || MatToolbarModule)(); }, imports: [[MatCommonModule],\n        MatCommonModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(MatToolbarModule, { declarations: function () { return [MatToolbar,\n        MatToolbarRow]; }, imports: function () { return [MatCommonModule]; }, exports: function () { return [MatToolbar,\n        MatToolbarRow,\n        MatCommonModule]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(MatToolbarModule, [{\n        type: NgModule,\n        args: [{\n                imports: [MatCommonModule],\n                exports: [MatToolbar, MatToolbarRow, MatCommonModule],\n                declarations: [MatToolbar, MatToolbarRow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/material/toolbar/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatToolbar, MatToolbarModule, MatToolbarRow, throwToolbarMixedModesError };\n\n//# sourceMappingURL=toolbar.js.map"]}